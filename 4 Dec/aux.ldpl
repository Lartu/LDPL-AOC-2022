PROCEDURE:

SUB-PROCEDURE IS_RANGE_CONTAINED
    # RETURNS 1 IN RESULT IF ANY OF THE RANGES IS TOTALLY CONTAINED BY THE OTHER.
    # OTHERWISE, RETURNS 0 IN RESULT.
    PARAMETERS:
        1ST_LOWER IS NUMBER
        1ST_UPPER IS NUMBER
        2ND_LOWER IS NUMBER
        2ND_UPPER IS NUMBER
        RESULT    IS NUMBER
    PROCEDURE:
        IF 1ST_LOWER IS GREATER THAN OR EQUAL TO 2ND_LOWER AND 1ST_UPPER IS LESS THAN OR EQUAL TO 2ND_UPPER THEN
            STORE 1 IN RESULT
        ELSE IF 2ND_LOWER IS GREATER THAN OR EQUAL TO 1ST_LOWER AND 2ND_UPPER IS LESS THAN OR EQUAL TO 1ST_UPPER THEN
            STORE 1 IN RESULT
        ELSE
            STORE 0 IN RESULT
        END IF
END SUB-PROCEDURE
CREATE STATEMENT "CHECK CONTAINMENT FROM $ TO $ AND $ TO $ IN $" EXECUTING IS_RANGE_CONTAINED


SUB-PROCEDURE IS_RANGE_OVERLAPPING
    # RETURNS 1 IN RESULT IF ANY OF THE RANGES IS OVERLAPS WITH THE OTHER.
    # OTHERWISE, RETURNS 0 IN RESULT.
    PARAMETERS:
        1ST_LOWER IS NUMBER
        1ST_UPPER IS NUMBER
        2ND_LOWER IS NUMBER
        2ND_UPPER IS NUMBER
        RESULT    IS NUMBER
    PROCEDURE:
        IF 1ST_LOWER IS GREATER THAN OR EQUAL TO 2ND_LOWER AND 1ST_LOWER IS LESS THAN OR EQUAL TO 2ND_UPPER THEN
            STORE 1 IN RESULT
        ELSE IF 1ST_UPPER IS GREATER THAN OR EQUAL TO 2ND_LOWER AND 1ST_UPPER IS LESS THAN OR EQUAL TO 2ND_UPPER THEN
            STORE 1 IN RESULT
        ELSE IF 2ND_LOWER IS GREATER THAN OR EQUAL TO 1ST_LOWER AND 2ND_LOWER IS LESS THAN OR EQUAL TO 1ST_UPPER THEN
            STORE 1 IN RESULT
        ELSE IF 2ND_UPPER IS GREATER THAN OR EQUAL TO 1ST_LOWER AND 2ND_UPPER IS LESS THAN OR EQUAL TO 1ST_UPPER THEN
            STORE 1 IN RESULT
        ELSE
            STORE 0 IN RESULT
        END IF
END SUB-PROCEDURE
CREATE STATEMENT "CHECK OVERLAP FROM $ TO $ AND $ TO $ IN $" EXECUTING IS_RANGE_OVERLAPPING