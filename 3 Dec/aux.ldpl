PROCEDURE:

SUB-PROCEDURE GET_REPEATED_ELEMENT
    # GETS THE ELEMENT THAT APPEARS IN BOTH HALVES OF THE RACKSACK
    PARAMETERS:
        RACKSACK    IS TEXT
        ELEMENT     IS TEXT
    LOCAL DATA:
        LENGTH      IS NUMBER
        HALF        IS NUMBER
        ITERATOR_1  IS NUMBER
        ITERATOR_2  IS NUMBER
        CHAR_1      IS TEXT
        CHAR_2      IS TEXT
    PROCEDURE:
        GET LENGTH OF RACKSACK IN LENGTH
        DIVIDE LENGTH BY 2 IN HALF
        FOR ITERATOR_1 FROM 0 TO HALF STEP 1 DO
            GET CHARACTER AT ITERATOR_1 FROM RACKSACK IN CHAR_1
            FOR ITERATOR_2 FROM HALF TO LENGTH STEP 1 DO
                GET CHARACTER AT ITERATOR_2 FROM RACKSACK IN CHAR_2
                IF CHAR_1 IS EQUAL TO CHAR_2 THEN
                    STORE CHAR_1 IN ELEMENT
                    RETURN
                END IF
            REPEAT
        REPEAT
END SUB-PROCEDURE
CREATE STATEMENT "GET SHARED ELEMENT FROM $ IN $" EXECUTING GET_REPEATED_ELEMENT

SUB-PROCEDURE GET_ITEM_PRIORITY
    # GETS THE PRIORITY FOR AN ITEM (LOWERCASE A TO UPPERCASE Z)
    PARAMETERS:
        ELEMENT     IS TEXT
        PRIORITY    IS NUMBER
    LOCAL DATA:
        ASCII_VALUE IS NUMBER
    PROCEDURE:
        GET CHARACTER CODE OF ELEMENT IN ASCII_VALUE
        IF ASCII_VALUE IS LESS THAN OR EQUAL TO 90 THEN
            # UPPERCASE CHARACTER
            SUBTRACT 38 FROM ASCII_VALUE IN PRIORITY
        ELSE
            # LOWERCASE CHARACTER
            SUBTRACT 96 FROM ASCII_VALUE IN PRIORITY
        END IF
END SUB-PROCEDURE
CREATE STATEMENT "GET PRIORITY OF $ IN $" EXECUTING GET_ITEM_PRIORITY

SUB-PROCEDURE GET_REPEATED_ELEMENT_THREE
    # GETS THE ELEMENT THAT APPEARS IN AKK THREE RACKSACKS
    PARAMETERS:
        RACKSACK_1    IS TEXT
        RACKSACK_2    IS TEXT
        RACKSACK_3    IS TEXT
        ELEMENT       IS TEXT
    LOCAL DATA:
        LENGTH_1      IS NUMBER
        LENGTH_2      IS NUMBER
        LENGTH_3      IS NUMBER
        ITERATOR_1    IS NUMBER
        ITERATOR_2    IS NUMBER
        ITERATOR_3    IS NUMBER
        CHAR_1        IS TEXT
        CHAR_2        IS TEXT
        CHAR_3        IS TEXT
    PROCEDURE:
        GET LENGTH OF RACKSACK_1 IN LENGTH_1
        GET LENGTH OF RACKSACK_2 IN LENGTH_2
        GET LENGTH OF RACKSACK_3 IN LENGTH_3
        FOR ITERATOR_1 FROM 0 TO LENGTH_1 STEP 1 DO
            GET CHARACTER AT ITERATOR_1 FROM RACKSACK_1 IN CHAR_1
            FOR ITERATOR_2 FROM 0 TO LENGTH_2 STEP 1 DO
                GET CHARACTER AT ITERATOR_2 FROM RACKSACK_2 IN CHAR_2
                FOR ITERATOR_3 FROM 0 TO LENGTH_3 STEP 1 DO
                    GET CHARACTER AT ITERATOR_3 FROM RACKSACK_3 IN CHAR_3
                    IF CHAR_1 IS EQUAL TO CHAR_2 AND CHAR_2 IS EQUAL TO CHAR_3 THEN
                        STORE CHAR_1 IN ELEMENT
                        RETURN
                    END IF
                REPEAT
            REPEAT
        REPEAT
END SUB-PROCEDURE
CREATE STATEMENT "GET SHARED ELEMENT FROM $ AND $ AND $ IN $" EXECUTING GET_REPEATED_ELEMENT_THREE